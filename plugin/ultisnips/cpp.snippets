snippet for "Simple for loop"
for (size_t ${1:i} = 0; $1 < ${2:10}; ++$1)
{
	${3:// Do Stuff here}
}
endsnippet

snippet cout "Stdout stream"
std::cout << ${1:__stream__} << '\n';
endsnippet

global !p
def random_header_uid():
		from uuid import uuid4
		uid_str = "H" + str(uuid4())[1:]
		return uid_str.upper().replace("-", "_")
endglobal

snippet #ifndef "Random include guard"
#ifndef ${1: `!p t[1]  = random_header_uid()`}
#define $1

$0

#endif /* $1 */
endsnippet

snippet ns "namespace"
namespace ${1:__identifier__}
{
$0
} // namespace $1
endsnippet

snippet class "class declaration"
class ${1:Name}
{
public:
	$0
private:

};
endsnippet

snippet struct "struct declaration"
struct ${1:Name}
{
	$0
};
endsnippet

snippet if "if clause"
if (${1:condition})
{
	$2
}
$0
endsnippet

snippet elif "else if clause"
else if (${1:condition})
{
	$2
}
$0
endsnippet

snippet else "else clause"
else
{
	$1
}
$0
endsnippet

snippet switch "switch case"
switch (${1:var})
{
	case ${2:val}:
		$3
	default:
		$4
}
endsnippet

snippet ddox "doxygen comment"
/** ${1:Brief desciption}
 *  ${2:Detailed description}
$0 */
endsnippet

snippet dox "brief doxygen comment"
/**
 *  ${1:Brief desciption}
$0 */
endsnippet

snippet dx "inline doxygen comment"
///< ${1:descirption}
endsnippet
